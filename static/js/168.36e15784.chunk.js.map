{"version":3,"file":"static/js/168.36e15784.chunk.js","mappings":"mTACMA,EAAU,mCACVC,EAAU,gCAEHC,EAAQ,mCAAG,sGACCC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,qDACkCD,IAFnC,uBACdI,EADc,EACdA,KADc,kBAIfA,GAJe,2CAAH,qDAORC,EAAU,mCAAG,WAAMC,GAAN,yFACDH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACDK,EADC,mCAC4BN,IAF3B,uBAChBI,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVG,EAAY,mCAAG,WAAMD,GAAN,yFACHH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACDK,EADC,2CACoCN,IAFjC,uBAClBI,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZI,EAAc,mCAAG,WAAMF,GAAN,yFACLH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACDK,EADC,2CACoCN,IAF/B,uBACpBI,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdK,EAAa,mCAAG,WAAMC,GAAN,yFACJP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,8BACWS,EADX,uDAC+DV,EAD/D,YADI,uBACnBI,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qD,6IC/B1B,EAAmC,kCAAnC,EAAuF,iCAAvF,EAAgJ,uCAAhJ,EAAgN,wC,SCoChN,EAhCgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAgB,mCAAG,8GAEQT,EAAAA,EAAAA,IAAeM,GAFvB,OAEfI,EAFe,OAGrBL,EAAWK,EAAeC,SAHL,gDAKrBC,QAAQC,MAAM,0BAAd,MALqB,yDAAH,qDAQtBJ,GATqB,CAUtB,GAAE,CAACH,KAGF,iBAAKQ,UAAWC,EAAhB,UACsB,IAAnBX,EAAQY,SAAgB,uBAAG,yCAC5B,wBACGZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASrB,EAApB,EAAoBA,GAApB,OACX,gBAAagB,UAAWC,EAAxB,WACE,gBAAID,UAAWC,EAAf,UAA6C,WAASG,MACtD,cAAGJ,UAAWC,EAAd,SAA8CI,MAFvCrB,EADE,QASpB,C","sources":["components/Api.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '468c2ebbcd20d786d16a982ad3dded4a';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getFilms = async () => {\n  const { data } = await axios.get(\n    `${baseURL}trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getFilmsId = async id => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${id}?language=en-US&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getFilmsCast = async id => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${id}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getFilmReviews = async id => {\n  const { data } = await axios.get(\n    `${baseURL}/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const getFilmSearch = async query => {\n  const { data } = await axios.get(\n    `${baseURL}search/movie?query=${query}&include_adult=false&language=en-US&api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\",\"reviewsListItem\":\"Reviews_reviewsListItem__FIdwO\",\"reviewsListItemAuthor\":\"Reviews_reviewsListItemAuthor__spFhX\",\"reviewsListItemContent\":\"Reviews_reviewsListItemContent__VVei9\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmReviews } from '../Api';\nimport styles from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    if (!moviesId) return;\n    const fetchFilmReviews = async () => {\n      try {\n        const fetchedReviews = await getFilmReviews(moviesId);\n        setReviews(fetchedReviews.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n    fetchFilmReviews();\n  }, [moviesId]);\n\n  return (\n    <div className={styles.reviewsContainer}>\n      {reviews.length === 0 && <p>No reviews available for this movie</p>}\n      <ul>\n        {reviews.map(({ author, content, id }) => (\n          <li key={id} className={styles.reviewsListItem}>\n            <h4 className={styles.reviewsListItemAuthor}>Author: {author}</h4>\n            <p className={styles.reviewsListItemContent}>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","baseURL","getFilms","axios","data","getFilmsId","id","getFilmsCast","getFilmReviews","getFilmSearch","query","useState","reviews","setReviews","moviesId","useParams","useEffect","fetchFilmReviews","fetchedReviews","results","console","error","className","styles","length","map","author","content"],"sourceRoot":""}